"""Initial migration

Revision ID: f487d931f3ba
Revises: 
Create Date: 2025-08-04 22:45:25.008953

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f487d931f3ba'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('department_facility',
    sa.Column('department_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('department_name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('department_id'),
    sa.UniqueConstraint('department_name')
    )
    op.create_table('products',
    sa.Column('product_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('product_type', sa.Enum('item', 'asset', name='producttype'), nullable=False),
    sa.Column('brand', sa.String(length=100), nullable=True),
    sa.Column('model', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('product_id'),
    sa.UniqueConstraint('name', name='products_name_unique')
    )
    op.create_table('suppliers',
    sa.Column('supplier_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('supplier_name', sa.String(length=100), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('contact_number', sa.String(length=11), nullable=True),
    sa.Column('status', sa.Enum('active', 'inactive', name='supplierstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('supplier_id'),
    sa.UniqueConstraint('supplier_name')
    )
    op.create_table('department_requests',
    sa.Column('department_request_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('request_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['department_facility.department_id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.product_id'], ),
    sa.PrimaryKeyConstraint('department_request_id')
    )
    op.create_table('inventory',
    sa.Column('inventory_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('running_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.product_id'], ),
    sa.PrimaryKeyConstraint('inventory_id')
    )
    op.create_table('maintenance',
    sa.Column('maintenance_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('engineer_name', sa.String(length=100), nullable=False),
    sa.Column('scheduled_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('pending', 'in_progress', 'completed', 'condemned', name='maintenancestatus'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.product_id'], ),
    sa.PrimaryKeyConstraint('maintenance_id')
    )
    op.create_table('product_suppliers',
    sa.Column('product_supplier_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', name='status'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.product_id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.supplier_id'], ),
    sa.PrimaryKeyConstraint('product_supplier_id'),
    sa.UniqueConstraint('product_id', 'supplier_id', name='product_supplier_unique')
    )
    op.create_table('purchase_requests',
    sa.Column('request_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'approved', 'rejected', name='purchaserequeststatusenum'), nullable=False),
    sa.Column('request_date', sa.DateTime(), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.product_id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.supplier_id'], ),
    sa.PrimaryKeyConstraint('request_id')
    )
    op.create_table('evaluation',
    sa.Column('evaluation_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('request_id', sa.Integer(), nullable=False),
    sa.Column('undamaged_quantity', sa.Integer(), nullable=False),
    sa.Column('damaged_quantity', sa.Integer(), nullable=False),
    sa.Column('evaluation_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['purchase_requests.request_id'], ),
    sa.PrimaryKeyConstraint('evaluation_id')
    )
    op.create_table('damaged_items',
    sa.Column('damaged_item_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('evaluation_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('return_status', sa.Enum('pending', 'replaced', 'rejected', name='returnstatusenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['evaluation_id'], ['evaluation.evaluation_id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.product_id'], ),
    sa.PrimaryKeyConstraint('damaged_item_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('damaged_items')
    op.drop_table('evaluation')
    op.drop_table('purchase_requests')
    op.drop_table('product_suppliers')
    op.drop_table('maintenance')
    op.drop_table('inventory')
    op.drop_table('department_requests')
    op.drop_table('suppliers')
    op.drop_table('products')
    op.drop_table('department_facility')
    # ### end Alembic commands ###
